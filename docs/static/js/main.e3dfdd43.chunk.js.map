{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","res","useFetchGifs","image","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAmCeA,MA/Bf,YAA0C,IAAlBC,EAAiB,EAAjBA,cAAiB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAevC,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,iDACA,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YCGZG,EATK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,+BAAKA,EAAL,O,uBCNOK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UAAUF,GAD3C,+DAEFG,MAAMR,GAFJ,cAEfS,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QARjB,kBAWfY,GAXe,4CAAH,sDC2BLK,EAvBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACRjB,EAAQC,GACLiB,MAAK,SAACC,GACLH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAGd,CAACb,IAEGc,EDZyBK,CAAanB,GAAjCU,EAHoB,EAGzBJ,KAAaO,EAHY,EAGZA,QAEpB,OACE,oCACE,wBAAIjB,UAAU,qCAAd,IAAoDI,EAApD,KACCa,GAAW,uBAAGjB,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAEXc,EAAOF,KAAI,SAAAY,GAAK,OACd,kBAAC,EAAD,eACEC,IAAKD,EAAM3B,IACP2B,UEOHE,EArBM,WAAO,IAAD,EAEW3C,mBAAS,CAAC,cAFrB,mBAElB4C,EAFkB,KAEN7C,EAFM,KAQzB,OACE,oCACE,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACG6C,EAAWf,KAAI,SAACR,GAAD,OAAc,kBAAC,EAAD,CAASqB,IAAMrB,EAAWA,SAAUA,UCd1EwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e3dfdd43.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction AddCategory ({ setCategories }) {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Agregar Categoria</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title}/>\r\n      <p> {title} </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=hSG1jaCkUgRzLew0bNNG5wNr6ufYrrsW`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n return gifs;\r\n};","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  // const [images, setImages] = useState([]);\r\n  const {data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(image =>\r\n            <GifGridItem\r\n              key={image.id}\r\n              {...image}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then((res) => {\r\n        setState({\r\n          data: res,\r\n          loading: false\r\n        })\r\n      });\r\n  }, [category]);\r\n\r\n  return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One punch']);\r\n\r\n  // const handleAdd = (value) => {\r\n  //   setCategories([...categories, value]);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp </h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr/>\r\n\r\n      <ol>\r\n        {categories.map((category) => <GifGrid key={ category } category={category} />)}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}